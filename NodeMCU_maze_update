#include<ESP8266WiFi.h>
#include <SoftwareSerial.h>
#include <PubSubClient.h>   // Library for using the Network protcall MQTT in this case
#include <Wire.h>   // lib for communication.
#include "ArduinoJson.h"
const char* mqtt_server = "broker.mqtt-dashboard.com";
WiFiClient espClient;
PubSubClient client(espClient);
const char* ssid="will";
const char* password="12345678";
//WiFiServer server(80);
SoftwareSerial NodeMCU(D2,D3);
void setup() 
{
Serial.begin(115200);  /* initialise serial communication */
Serial.println();
Serial.println();
Serial.print("connnecting to");
Serial.print(ssid);
WiFi.begin(ssid,password);
while(WiFi.status()!=WL_CONNECTED){
  digitalWrite(D4,LOW);
  delay(500);
  Serial.print(".");
  digitalWrite(D4,HIGH);
}
digitalWrite(D4,HIGH);
Serial.println(" ");
Serial.println("WiFi Connected");
client.setServer(mqtt_server, 1883);
//server.begin();
Serial.println("Server started");
Serial.println(WiFi.localIP());
NodeMCU.begin(4800);
  pinMode(D2,INPUT);
  pinMode(D3,OUTPUT);
  pinMode(D4,OUTPUT);
  digitalWrite(D4,HIGH);
}
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected())
  {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    //if you MQTT broker has clientID,username and password
    //please change following line to    if (client.connect(clientId,userName,passWord))
    if (client.connect(clientId.c_str()))
    {
      Serial.println("connected");

    }
    else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 6 seconds before retrying
      delay(6000);
    }
  }
}
void loop()
{
/*WiFiClient client=server.available();
if(!client)
return;
Serial.println("new client");
while(!client.available()){
  delay(1);
}*/
/*int i=0;
while(i<10){
  client.println("yo boy");
  i++;
  delay(20);
}*/
  if (!client.connected()) {
    reconnect();
  } 
while(NodeMCU.available()>0){
  float val = NodeMCU.parseFloat();
  String JSON = "{";
  if(NodeMCU.read()== '\n'){
  Serial.println(val);
  if((int)val==1)
  JSON +="     F";
  //client.println("straight\n");
  else if((int)val==2)
  JSON +="     R";
  //client.println("right\n");
  else if((int)val==3)
  JSON +="     L";
  //client.println("left\n");
  else 
  JSON +="     S";
  //client.println("stopped\n");
  client.publish("meena", JSON.c_str());
  delay(200);
  digitalWrite(D4,LOW);
  delay(2);
  digitalWrite(D4,HIGH);
  delay(2);
    }
  }
}
